name: Build & Deploy Flutter APK (BK-Witten APP)

on:
  push:
    branches:
      - main

jobs:
  # ======================
  # 1. Build job
  # ======================
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      - name: Accept Android licenses
        run: yes | flutter doctor --android-licenses

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Clean Flutter build
        run: flutter clean
        working-directory: frontend

      - name: Install dependencies
        run: flutter pub get
        working-directory: frontend

      - name: Build APK
        run: flutter build apk --release
        working-directory: frontend

      - name: Extract version from pubspec.yaml
        id: version
        working-directory: frontend
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | cut -d "+" -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Rename APK with version
        run: |
          mkdir -p renamed-apk
          mv frontend/build/app/outputs/flutter-apk/app-release.apk \
            renamed-apk/BK-Witten-v${{ steps.version.outputs.version }}.apk

      - name: Upload renamed APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: renamed-apk/BK-Witten-v${{ steps.version.outputs.version }}.apk

  # ======================
  # 2. Deploy job
  # ======================
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download built APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: ./apk

      - name: List downloaded files
        run: ls -R ./apk

      - name: Debug repo structure
        run: ls -R

      - name: Extract version again
        id: version
        working-directory: frontend
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | cut -d "+" -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate update.json
        working-directory: frontend
        run: |
          echo "{
            \"version\": \"${{ steps.version.outputs.version }}\",
            \"url\": \"https://${{ secrets.SSH_HOST }}/apk/BK-Witten-v${{ steps.version.outputs.version }}.apk\"
          }" > update.json
          cat update.json
  
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
      
      - name: Upload APK & update.json to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ./apk/BK-Witten-v${{ steps.version.outputs.version }}.apk \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/nginx-apk/apk/
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 frontend/update.json \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/nginx-apk/update.json
    
      - name: Verify remote APK & update.json
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ls -lh ~/nginx-apk/apk/BK-Witten-v*
            cat ~/nginx-apk/update.json
